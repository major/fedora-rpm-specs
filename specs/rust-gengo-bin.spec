# Generated by rust2rpm 27
%bcond check 1

%global crate gengo-bin

Name:           rust-gengo-bin
Version:        0.12.2
Release:        %autorelease
Summary:        Get the language distribution stats of your repository

License:        MIT OR Apache-2.0
URL:            https://crates.io/crates/gengo-bin
Source:         %{crates_source}
# * Man pages hand-written for Fedora in groff_man(7) format based on --help
Source10:       gengo.1
Source11:       gengo-git.1
Source12:       gengo-directory.1

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
Get the language distribution stats of your repository.}

%description %{_description}

%package     -n gengo
Summary:        %{summary}
# (Apache-2.0 OR MIT) AND BSD-3-Clause
# (MIT OR Apache-2.0) AND Unicode-DFS-2016
# 0BSD OR MIT OR Apache-2.0
# Apache-2.0
# Apache-2.0 OR BSL-1.0
# Apache-2.0 OR MIT
# Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT
# BSD-2-Clause OR Apache-2.0 OR MIT
# BSD-3-Clause
# MIT
# MIT OR Apache-2.0
# MIT OR Apache-2.0 OR Zlib
# MIT OR Zlib OR Apache-2.0
# MPL-2.0
# Unlicense OR MIT
# Zlib OR Apache-2.0 OR MIT
License:        %{shrink:
                (0BSD OR Apache-2.0 OR MIT) AND
                Apache-2.0 AND
                (Apache-2.0 OR Apache-2.0 WITH LLVM-exception OR MIT) AND
                (Apache-2.0 OR BSL-1.0) AND
                (Apache-2.0 OR MIT) AND
                (Apache-2.0 OR MIT OR Zlib) AND
                (Apache-2.0 OR BSD-2-Clause OR MIT) AND
                BSD-3-Clause AND
                MIT AND
                (MIT OR Unlicense) AND
                MPL-2.0 AND
                Unicode-DFS-2016 
                }
# LICENSE.dependencies contains a full license breakdown

%description -n gengo %{_description}

%files       -n gengo
%license LICENSE-APACHE
%license LICENSE-MIT
%license LICENSE.dependencies
%doc crates-io.md
%{_bindir}/gengo
%{_mandir}/man1/gengo.1*
%{_mandir}/man1/gengo-*.1*

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE-APACHE
%license %{crate_instdir}/LICENSE-MIT
%doc %{crate_instdir}/crates-io.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+color-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+color-devel %{_description}

This package contains library source intended for building other packages which
use the "color" feature of the "%{crate}" crate.

%files       -n %{name}+color-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+owo-colors-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+owo-colors-devel %{_description}

This package contains library source intended for building other packages which
use the "owo-colors" feature of the "%{crate}" crate.

%files       -n %{name}+owo-colors-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+relative-luminance-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+relative-luminance-devel %{_description}

This package contains library source intended for building other packages which
use the "relative-luminance" feature of the "%{crate}" crate.

%files       -n %{name}+relative-luminance-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build
%{cargo_license_summary}
%{cargo_license} > LICENSE.dependencies

%install
%cargo_install
install -t '%{buildroot}%{_mandir}/man1' -D -p -m 0644 \
    '%{SOURCE10}' '%{SOURCE11}' '%{SOURCE12}'

%if %{with check}
%check
# * The skipped javascript-related tests only work in a git checkout, using the
#   test/javascript branch. See .github/workflows/ci.yml in git for an idea of
#   how this is supposed to work.
%{cargo_test -- -- --exact %{shrink:
    --skip test_json_output_on_javascript_repo
    --skip test_color_breakdown_javascript_repo
    --skip test_color_javascript_repo
}}
%endif

%changelog
%autochangelog
