# Generated by go2rpm 1.17.1.post0
%bcond check 1

# https://github.com/distribution/distribution
%global goipath   github.com/distribution/distribution/v3
%global forgeurl  https://github.com/distribution/distribution
Version:          3.0.0

%gometa -L -f

Name:             docker-distribution
Release:          %autorelease
Summary:          The toolkit to pack, ship, store, and deliver container content

# Generated by go-vendor-tools
License:          Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND ISC AND MIT AND MPL-2.0
URL:              %{gourl}
Source0:          %{gosource}
# Generated by go-vendor-tools
Source1:          %{archivename}-vendor.tar.bz2
Source2:          go-vendor-tools.toml
Source10:         docker-distribution.service
Source20:         config.yml
Source30:         docker-distribution.sysuser.conf

BuildRequires:    go-vendor-tools
BuildRequires:    systemd-rpm-macros
%{?sysusers_requires_compat}

Provides:         registry = %{version}-%{release}
Obsoletes:        golang-github-docker-distribution < 2.8.3-5
Obsoletes:        golang-github-distribution-3 < 3.0.0-0.8

%description
%{summary}.
This package provides Docker Registry - a service for
storing and distributing OCI and Docker container images.

%prep
%goprep -A
%setup -q -T -D -a1 %{forgesetupargs}
%autopatch -p1

%generate_buildrequires
%go_vendor_license_buildrequires -c %{S:2}

%build
%global gomodulesmode GO111MODULE=on
export GO_LDFLAGS=" -X %{goipath}/version.version=%{version} -X %{goipath}/version.revision=%{release} "

# set currentgoldflags to nil; blocks default go macro -X version strings
%global currentgoldflags   %nil

# build cmd contents
%gobuild -o %{gobuilddir}/bin/registry %{goipath}/cmd/registry
# the following binaries not included in upstream release tar file
# %%gobuild -o %%{gobuilddir}/bin/digest %%{goipath}/cmd/digest
# %%gobuild -o %%{gobuilddir}/bin/registry-api-descriptor-template %{goipath}/cmd/registry-api-descriptor-template

%install
%go_vendor_license_install -c %{S:2}
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/

# install systemd/init scripts
install -d %{buildroot}%{_unitdir}
install -p -m 644 %{SOURCE10} %{buildroot}%{_unitdir}

# install config file
install -d -p %{buildroot}%{_sysconfdir}/docker-distribution/registry
install -p -m 644 %{SOURCE20} %{buildroot}%{_sysconfdir}/docker-distribution/registry

# install root dir
install -d %{buildroot}%{_sharedstatedir}/registry

# install sysuser file
install -p -D -m 0644 %{SOURCE30} %{buildroot}%{_sysusersdir}/docker-distribution.conf


%check
%go_vendor_license_check -c %{S:2}
%if %{with check}
# skip specific tests that fail with 'operation not permitted'.
for test in \
           "TestHTTPChecker" \
           "TestFileReaderSeek" \
           "TestListObjectsV2" \
           "TestGracefulShutdown" \
           "TestInMemoryDriverSuite" \
           "TestWriteReadLargeStreams" \
; do
awk -i inplace '/^func.*'"$test"'\(/ { print; print "\tt.Skip(\"disabled failing test\")"; next}1' $(grep -rl $test)
done
# -test.short from Makefile test
%global gocheckflags   %{?gocheckflags} -test.short
%gocheck -d registry/storage/driver/inmemory \
         -d registry/storage/driver/filesystem \
         -d registry/storage/driver/azure \
         -d registry/storage/driver/gcs \
         -d registry/storage/driver/s3-aws \
         -d registry/storage/driver/testsuites \
         -d registry/handlers

# to be done later
# %%gotest ./...
%endif

%pre
%sysusers_create_compat %{SOURCE30}

%post
%systemd_post docker-distribution.service

%preun
%systemd_preun docker-distribution.service

%postun
%systemd_postun_with_restart docker-distribution.service


%files -f %{go_vendor_license_filelist}
%license vendor/modules.txt
%doc CONTRIBUTING.md README.md ROADMAP.md SECURITY.md MAINTAINERS
%{_bindir}/registry
%{_sysusersdir}/docker-distribution.conf
# %%{_bindir}/digest
# %%{_bindir}/registry-api-descriptor-template
%{_unitdir}/docker-distribution.service
%attr(-,registry,registry) %dir %{_sharedstatedir}/registry
%dir %{_sysconfdir}/docker-distribution
%dir %{_sysconfdir}/docker-distribution/registry

%config(noreplace) %{_sysconfdir}/docker-distribution/registry/config.yml

%changelog
%autochangelog
