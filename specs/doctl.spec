# Generated by go2rpm 1.14.0
%bcond check 1
%bcond bootstrap 0

%global major 1
%global minor 120
%global patchlevel 0

%if %{with bootstrap}
%global debug_package %{nil}
%endif

%if %{with bootstrap}
%global __requires_exclude %{?__requires_exclude:%{__requires_exclude}|}^golang\\(.*\\)$
%endif

# https://github.com/digitalocean/doctl
%global goipath         github.com/digitalocean/doctl
Version:                1.120.0

%gometa -L -f

%global common_description %{expand:
The official command line interface for the DigitalOcean API.}

%global golicenses      LICENSE.txt
%global godocs          CONTRIBUTING.md CHANGELOG.md README.md

Name:           doctl
Release:        %autorelease
Summary:        The official command line interface for the DigitalOcean API

License:        Apache-2.0
URL:            %{gourl}
Source:         %{gosource}

%description %{common_description}

%gopkg

%prep
%goprep -A
%autopatch -p1

# remove integration tests to avoid extra deps
rm -rf integration

%if %{without bootstrap}
%generate_buildrequires
%go_generate_buildrequires
%endif

%if %{without bootstrap}
%build
export LDFLAGS="-X github.com/digitalocean/doctl.Major=%{major}  \
                -X github.com/digitalocean/doctl.Minor=%{minor} \
                -X github.com/digitalocean/doctl.Patch=%{patchlevel}  \
                -X github.com/digitalocean/doctl.Label=Fedora"
%gobuild -o %{gobuilddir}/bin/%{name} %{goipath}/cmd/%{name}

%{gobuilddir}/bin/%{name} completion bash > %{name}.bash
%{gobuilddir}/bin/%{name} completion fish > %{name}.fish
%{gobuilddir}/bin/%{name} completion zsh  > %{name}.zsh
%endif

%install
%if %{without bootstrap}
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/

install -Dpm 0644 %{name}.bash %{buildroot}%{bash_completions_dir}/%{name}
install -Dpm 0644 %{name}.fish %{buildroot}%{fish_completions_dir}/%{name}.fish
install -Dpm 0644 %{name}.zsh  %{buildroot}%{zsh_completions_dir}/_%{name}
%endif

%if %{without bootstrap}
%if %{with check}
%check
for test in "TestRunAppsDevConfigSet" "TestRunAppsDevConfigUnset" \
; do
awk -i inplace '/^func.*'"$test"'\(/ { print; print "\tt.Skip(\"disabled failing test\")"; next}1' $(grep -rl $test)
done
%gocheck
%endif
%endif

%if %{without bootstrap}
%files
%license LICENSE.txt
%doc CONTRIBUTING.md CHANGELOG.md README.md
%{_bindir}/doctl
%{bash_completions_dir}/%{name}
%{fish_completions_dir}/%{name}.fish
%{zsh_completions_dir}/_%{name}
%endif

%changelog
%autochangelog
