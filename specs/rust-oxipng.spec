# Generated by rust2rpm 27
%bcond check 1

%global crate oxipng

Name:           rust-oxipng
Version:        9.1.5
Release:        %autorelease
Summary:        Lossless PNG compression optimizer

License:        MIT
URL:            https://crates.io/crates/oxipng
Source:         %{crates_source}
# * We need the GitHub archive, in addition to the .crate from crates.io,
#   because the crate does not contain the xtask/ directory required for
#   generating a man page. As noted in
#   https://github.com/shssoichiro/oxipng/issues/654, there are technical
#   obstacles to including this in the crate. This source also includes the
#   tests/ directory, which allows us to run tests.
Source10:       https://github.com/shssoichiro/oxipng/archive/v%{version}/oxipng-%{version}.tar.gz
# Automatically generated patch to strip dependencies and normalize metadata
Patch:          oxipng-fix-metadata-auto.diff
# Manually created patch for downstream crate metadata changes
# * Set autotests = true so we run all the tests
Patch:          oxipng-fix-metadata.diff

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
A lossless PNG compression optimizer.}

%description %{_description}

%package     -n %{crate}
Summary:        %{summary}
# Apache-2.0
# Apache-2.0 OR MIT
# Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT
# MIT
# MIT OR Apache-2.0
# Zlib OR Apache-2.0 OR MIT
License:        %{shrink:
                Apache-2.0 AND
                (Apache-2.0 OR MIT) AND
                (Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT) AND
                MIT AND
                (Zlib OR Apache-2.0 OR MIT)
                }
# LICENSE.dependencies contains a full license breakdown

%description -n %{crate} %{_description}

%files       -n %{crate}
%license LICENSE
%license LICENSE.dependencies
%doc CHANGELOG.md
%doc MANUAL.txt
%doc README.md
%doc SECURITY.md
%{_bindir}/oxipng
%{_mandir}/man1/oxipng.1*

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE
%doc %{crate_instdir}/CHANGELOG.md
%doc %{crate_instdir}/MANUAL.txt
%doc %{crate_instdir}/README.md
%doc %{crate_instdir}/SECURITY.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+binary-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+binary-devel %{_description}

This package contains library source intended for building other packages which
use the "binary" feature of the "%{crate}" crate.

%files       -n %{name}+binary-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+filetime-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+filetime-devel %{_description}

This package contains library source intended for building other packages which
use the "filetime" feature of the "%{crate}" crate.

%files       -n %{name}+filetime-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+freestanding-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+freestanding-devel %{_description}

This package contains library source intended for building other packages which
use the "freestanding" feature of the "%{crate}" crate.

%files       -n %{name}+freestanding-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+parallel-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+parallel-devel %{_description}

This package contains library source intended for building other packages which
use the "parallel" feature of the "%{crate}" crate.

%files       -n %{name}+parallel-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+sanity-checks-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+sanity-checks-devel %{_description}

This package contains library source intended for building other packages which
use the "sanity-checks" feature of the "%{crate}" crate.

%files       -n %{name}+sanity-checks-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+system-libdeflate-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+system-libdeflate-devel %{_description}

This package contains library source intended for building other packages which
use the "system-libdeflate" feature of the "%{crate}" crate.

%files       -n %{name}+system-libdeflate-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+zopfli-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+zopfli-devel %{_description}

This package contains library source intended for building other packages which
use the "zopfli" feature of the "%{crate}" crate.

%files       -n %{name}+zopfli-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
# Copy in the xtask/ directory from the GitHub archive, required for generating
# the man page. Remove upstreamâ€™s lock file, which we cannot respect. Note
# that the mangen xtask has its own dependencies, so we must run
# %%cargo_generate_buildrequires in the xtask directory if we are to invoke it
# in the build.
tar -xzvf '%{SOURCE10}' --strip-components=1 oxipng-%{version}/xtask
rm xtask/Cargo.lock
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires
pushd xtask >/dev/null
%cargo_generate_buildrequires
popd >/dev/null

%build
%cargo_build
%{cargo_license_summary}
%{cargo_license} > LICENSE.dependencies
# Generate the man page
%{__cargo} run --manifest-path xtask/Cargo.toml -- mangen

%install
%cargo_install
mansrc='target/xtask/mangen/manpages/oxipng.1'
mandest='%{buildroot}%{_mandir}/man1'
install -t "${mandest}" -D -p -m 0644 "${mansrc}"

%if %{with check}
%check
# Copy in the tests/ directory, which gives us some actual tests. We do this
# here rather than in %%prep in order to prove that nothing from tests/
# contributes to the binary RPMs.
tar -xzvf '%{SOURCE10}' --strip-components=1 oxipng-%{version}/tests
%cargo_test
%endif

%changelog
%autochangelog
