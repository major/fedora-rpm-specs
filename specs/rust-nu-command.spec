# Generated by rust2rpm 27
%bcond check 1
%global debug_package %{nil}

%global crate nu-command

Name:           rust-nu-command
Version:        0.99.1
Release:        %autorelease
Summary:        Nushell's built-in commands

License:        MIT
URL:            https://crates.io/crates/nu-command
Source:         %{crates_source}
# Automatically generated patch to strip dependencies and normalize metadata
Patch:          nu-command-fix-metadata-auto.diff
# Manually created patch for downstream crate metadata changes
# * drop rusqlite's bundled feature
# * Update brotli from 5.0 to 7.0: https://github.com/nushell/nushell/pull/13960
# * Update quick-xml from 0.32.0 to >=0.33.0,<0.38.0
# * Update titlecase from 2.0 to 3.0
# * Relax chrono-tz dependency to allow building with 0.8..=0.10
# * update rstest to 0.26: https://github.com/nushell/nushell/pull/16359
# * allow procfs 0.17 and which 7,
#   https://github.com/nushell/nushell/pull/14489, and which 8,
#   https://github.com/nushell/nushell/pull/16045
# * allow roxmltree 0.20: https://github.com/nushell/nushell/pull/14513
# * Update lscolors from 0.17 to 0.20:
#   https://github.com/nushell/nushell/pull/15737
# * Allow indicatif 0.18: https://github.com/nushell/nushell/pull/16248
Patch:          nu-command-fix-metadata.diff
# * Allow compiling with quick-xml 0.33+
# * https://github.com/nushell/nushell/pull/14354
Patch2:         nu-command-fix-for-quick-xml-0_33.diff

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
Nushell's built-in commands.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+plugin-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+plugin-devel %{_description}

This package contains library source intended for building other packages which
use the "plugin" feature of the "%{crate}" crate.

%files       -n %{name}+plugin-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+rusqlite-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+rusqlite-devel %{_description}

This package contains library source intended for building other packages which
use the "rusqlite" feature of the "%{crate}" crate.

%files       -n %{name}+rusqlite-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+sqlite-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+sqlite-devel %{_description}

This package contains library source intended for building other packages which
use the "sqlite" feature of the "%{crate}" crate.

%files       -n %{name}+sqlite-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+trash-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+trash-devel %{_description}

This package contains library source intended for building other packages which
use the "trash" feature of the "%{crate}" crate.

%files       -n %{name}+trash-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+trash-support-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+trash-support-devel %{_description}

This package contains library source intended for building other packages which
use the "trash-support" feature of the "%{crate}" crate.

%files       -n %{name}+trash-support-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
# * these tests require unshipped fixtures
# * test_count_counts_lines has a Unicode mismatch
%{cargo_test -- -- %{shrink:
    --skip commands::
    --skip debug::timeit::test_time_block
    --skip format_conversions::
    --skip strings::split::words::test::test_incompat_flags
    --skip strings::split::words::test::mixed_letter_number
    --skip strings::str_::stats::test_count_counts_lines
    --skip format_conversions::
    --skip system::run_external::test::test_expand_glob
}}
%endif

%changelog
%autochangelog
