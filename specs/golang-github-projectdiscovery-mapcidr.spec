# Generated by go2rpm 1.16.0
%bcond check 1
%global gomodulesmode GO111MODULE=on

# https://github.com/projectdiscovery/mapcidr
%global goipath         github.com/projectdiscovery/mapcidr
Version:                1.1.94
%global tag             1.1.94

%gometa -L -f

%global common_description %{expand:
Small utility program to perform multiple operations for a given subnet/CIDR
ranges.}

Name:           golang-github-projectdiscovery-mapcidr
Release:        %autorelease
Summary:        Utility for operations on subnet/CIDR ranges

# Generated by go-vendor-tools
License:        0BSD AND Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND ICU AND ISC AND MIT AND MPL-2.0 AND Unlicense
URL:            %{gourl}
Source0:        %{gosource}
# Generated by go-vendor-tools
Source1:        %{archivename}-vendor.tar.bz2
Source2:        go-vendor-tools.toml

BuildRequires:  go-vendor-tools

%description %{common_description}

%prep
%goprep -A
%setup -q -T -D -a1 %{forgesetupargs}
%autopatch -p1

%generate_buildrequires
%go_vendor_license_buildrequires -c %{S:2}

%build
%gobuild -o %{gobuilddir}/bin/mapcidr %{goipath}/cmd/mapcidr

%install
%go_vendor_license_install -c %{S:2}
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/

%check
%go_vendor_license_check -c %{S:2}
%if %{with check}
# Require connection to api.asnmap.sh
for test in "Test_asnClient_GetCIDRsForASNNum" "TestASNClient_GetIPAddressesAsStream" \
; do
awk -i inplace '/^func.*'"$test"'\(/ { print; print "\tt.Skip(\"disabled failing test\")"; next}1' $(grep -rl $test)
done
export GO111MODULE=on
%gotest ./...
%endif

%files -f %{go_vendor_license_filelist}
%license vendor/modules.txt
%doc README.md
%{_bindir}/mapcidr


%changelog
%autochangelog
