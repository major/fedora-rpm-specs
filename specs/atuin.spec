# Generated by rust2rpm 27
%bcond check 1
# server tests require pgsql 14
# el9 has ursine pgsql 13 and the newer ones are modular
%bcond pgtests %{undefined el9}

Name:           atuin
Version:        18.3.0
Release:        %autorelease
Summary:        Magical shell history

SourceLicense:  MIT
%global _license %{shrink:
((Apache-2.0 OR MIT) AND BSD-3-Clause) AND
((MIT OR Apache-2.0) AND Unicode-DFS-2016) AND
(0BSD OR MIT OR Apache-2.0) AND
(Apache-2.0) AND
(Apache-2.0 AND MIT) AND
(Apache-2.0 OR BSL-1.0) AND
(Apache-2.0 OR BSL-1.0 OR MIT) AND
(Apache-2.0 OR ISC OR MIT) AND
(Apache-2.0 OR MIT) AND
(Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT) AND
(BSD-2-Clause OR Apache-2.0 OR MIT) AND
(BSD-3-Clause) AND
(ISC) AND
(ISC AND MIT AND OpenSSL) AND
(MIT) AND
(MIT AND (MIT OR Apache-2.0)) AND
(MIT AND Apache-2.0) AND
(MIT AND BSD-3-Clause) AND
(MIT OR Apache-2.0) AND
(MIT OR Apache-2.0 OR Zlib) AND
(MIT OR Zlib OR Apache-2.0) AND
(MPL-2.0) AND
(Unlicense OR MIT) AND
(Zlib) AND
(Zlib OR Apache-2.0 OR MIT)
}

License:       %_license

URL:            https://atuin.sh
Source:         https://github.com/atuinsh/atuin/archive/refs/tags/v%{version}.tar.gz
# * Switch cli-clipboard for arboard
# * Cherry-picked from https://github.com/atuinsh/atuin/pull/2067
Patch10:        atuin-drop-cli-clipboard.patch
# * Update tonic and prost dependencies
# * Cherry-picked from https://github.com/atuinsh/atuin/pull/2250 and
#   https://github.com/atuinsh/atuin/pull/2251
Patch11:        atuin-bump-tonic.patch
# * Bump metrics dependencies
# * Cherry-picked from https://github.com/atuinsh/atuin/pull/2062
Patch12:        atuin-fix-metrics.patch
# * Update tiny-bip39 to 2.0.0
# * Cherry-picked https://github.com/atuinsh/atuin/pull/2643
Patch13:        atuin-Update-tiny-bip39.patch
# * Update tracing-tree to 0.4.0
# * Cherry-picked https://github.com/atuinsh/atuin/pull/2259
Patch14:        atuin-update-tracing-tree.patch

BuildRequires:  cargo-rpm-macros >= 24
BuildRequires:  protobuf-devel
%if %{with check}
BuildRequires:  postgresql-test-rpm-macros
%endif

%global _description %{expand:
Atuin replaces your existing shell history with a SQLite database, and records
additional context for your commands. Additionally, it provides optional and
fully encrypted synchronization of your history between machines, via an Atuin
server.
}

%description %{_description}

%package        all-users
Summary:        atuin init script for all users
Requires:       atuin = %{version}-%{release}
BuildArch:      noarch

# TODO: Add Requires/Recommends to bash-preexec

%description    all-users %{_description}

This package contains the init script to enable atuin for all users.

%prep
%autosetup -n atuin-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires -a

%build
%cargo_build -a
%{cargo_license_summary -a}
%{cargo_license -a} > LICENSE.dependencies
# Create auxiliary files
mkdir -p other_installs/shell_completion
# Generate all shell-completions
for shell in bash fish zsh; do
  ./target/rpm/atuin gen-completions --shell ${shell} -o other_installs/shell_completion
done

# Write the atuin init scripts statically
mkdir -p other_installs/libexec/atuin
for shell in bash fish zsh; do
  ./target/rpm/atuin init ${shell} > other_installs/libexec/atuin/atuin-init.${shell}
done

# Write the profile.d files enabling the install for all users
# Currently only bash is supported
mkdir -p other_installs/profile.d
cat > other_installs/profile.d/atuin.sh <<EOF
# atuin initialization script for all users

# Check for bash environment
if [ -n "\${BASH_VERSION-}" ]; then
  # Skip noninteractive shells.
  [[ \$- != *i* ]] && return

  # Use the statically written atuin init script
  source %{_libexecdir}/atuin/atuin-init.bash

# Check for zsh environment
elif [ -n "\$ZSH_VERSION-}" ]; then
  # Skip noninteractive shells.
  [[ \$- != *i* ]] && return

  # The /etc/zprofile script calls 'emulate -L ksh', to make zsh
  # happier when sourcing files in /etc/profile.d. However, atuin
  # needs some zsh-specific functions (i.e. compinit), so we emulate
  # zsh when sourcing the statically written atuin init script. See
  # /etc/zprofile or 'man zshbuiltins' for more details.
  emulate zsh -c "source %{_libexecdir}/atuin/atuin-init.zsh"
fi
EOF

%install
install -Dpm 0755 target/rpm/atuin -t %{buildroot}%{_bindir}
# Install the auxiliary files
# Shell completions
install -Dpm 0644 other_installs/shell_completion/atuin.bash -t %{buildroot}%{bash_completions_dir}
install -Dpm 0644 other_installs/shell_completion/atuin.fish -t %{buildroot}%{fish_completions_dir}
install -Dpm 0644 other_installs/shell_completion/_atuin -t %{buildroot}%{zsh_completions_dir}

# Static atuin init scripts
for shell in bash fish zsh; do
  install -Dpm 0755 other_installs/libexec/atuin/atuin-init.${shell} %{buildroot}%{_libexecdir}/atuin/atuin-init.${shell}
done
# Profile.d init script for all users
install -Dpm 0755 other_installs/profile.d/atuin.sh %{buildroot}%{_sysconfdir}/profile.d/atuin.sh

%if %{with check}
%check
%if %{with pgtests}
# start a postgres instance for the tests to use
export PGTESTS_LOCALE="C.UTF-8"
export PGTESTS_USERS="atuin:pass"
export PGTESTS_DATABASES="atuin:atuin"
export PGTESTS_PORT=5432
%postgresql_tests_run
%cargo_test -a
%else
%cargo_test -a -- -- --skip sync --skip change_password --skip multi_user_test --skip registration
%endif
%endif

%files
%license LICENSE
%license LICENSE.dependencies
%doc CHANGELOG.md
%doc CODE_OF_CONDUCT.md
%doc CONTRIBUTING.md
%doc CONTRIBUTORS
%doc README.md
%{_bindir}/atuin
%{bash_completions_dir}/atuin.bash
%{fish_completions_dir}/atuin.fish
%{zsh_completions_dir}/_atuin
%{_libexecdir}/atuin

%files all-users
%config %{_sysconfdir}/profile.d/atuin.sh

%changelog
%autochangelog
