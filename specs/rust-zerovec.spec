# Generated by rust2rpm 27
%bcond check 1
%global debug_package %{nil}

%global crate zerovec

Name:           rust-zerovec
Version:        0.11.2
Release:        %autorelease
Summary:        Zero-copy vector backed by a byte array

License:        Unicode-3.0
URL:            https://crates.io/crates/zerovec
Source:         %{crates_source}
# Manually created patch for downstream crate metadata changes
# * Do not depend on criterion; it is needed only for benchmarks.
# * Do not depend on postcard; it is only for benchmarks and an example, and
#   that example would have required the internal icu_benchmark_macros crate.
# * Do not depend on getrandom; nothing that needs it is included in the crate.
# * Patch out the zv_serde example to avoid a dependency on the internal
#   icu_benchmark_macros crate.
Patch:          zerovec-fix-metadata.diff
# * Downstream-only: Ignore a few tests we can’t compile
# * These tests fail to compile with:
# * error[E0277]: the trait bound `Cow<'a, str>: ZeroFrom<'a, str>` is not
#   satisfied
# * This problem seems to be specific to testing the released crate; we cannot
#   reproduce it in a git checkout. Enabling all features does not help; nor
#   does ensuring the zerofrom dependency with the derive feature is present in
#   the normalized Cargo.toml, as in
#   https://github.com/unicode-org/icu4x/pull/6585. It could still be a similar
#   issue with path dev-depencencies that we haven’t found yet. See
#   https://src.fedoraproject.org/rpms/rust-zerovec/pull-request/1#comment-232114
#   and subsequent discussion.
Patch10:        0001-Downstream-only-Ignore-a-few-tests-we-can-t-compile.patch
# * zerovec: two failing tests on big-endian s390x architecture
# * https://github.com/unicode-org/icu4x/issues/6588
# * On big-endian, skip two tests failing due to #6588
# * https://github.com/unicode-org/icu4x/pull/6587
# * Exported with git format-patch --relative so it applies to the crate.
Patch11:        0001-On-big-endian-skip-two-tests-failing-due-to-6588.patch

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
Zero-copy vector backed by a byte array.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+alloc-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+alloc-devel %{_description}

This package contains library source intended for building other packages which
use the "alloc" feature of the "%{crate}" crate.

%files       -n %{name}+alloc-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+databake-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+databake-devel %{_description}

This package contains library source intended for building other packages which
use the "databake" feature of the "%{crate}" crate.

%files       -n %{name}+databake-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+derive-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+derive-devel %{_description}

This package contains library source intended for building other packages which
use the "derive" feature of the "%{crate}" crate.

%files       -n %{name}+derive-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+hashmap-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+hashmap-devel %{_description}

This package contains library source intended for building other packages which
use the "hashmap" feature of the "%{crate}" crate.

%files       -n %{name}+hashmap-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+serde-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+serde-devel %{_description}

This package contains library source intended for building other packages which
use the "serde" feature of the "%{crate}" crate.

%files       -n %{name}+serde-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+std-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+std-devel %{_description}

This package contains library source intended for building other packages which
use the "std" feature of the "%{crate}" crate.

%files       -n %{name}+std-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+yoke-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+yoke-devel %{_description}

This package contains library source intended for building other packages which
use the "yoke" feature of the "%{crate}" crate.

%files       -n %{name}+yoke-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires -f derive,hashmap,serde

%build
%cargo_build -f derive,hashmap,serde

%install
%cargo_install -f derive,hashmap,serde

%if %{with check}
%check
# * ule::tuple::test_pairule_validate fails in release mode
%cargo_test -f derive,hashmap,serde -- -- --exact --skip ule::tuple::test_pairule_validate
%endif

%changelog
%autochangelog
