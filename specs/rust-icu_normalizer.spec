# Generated by rust2rpm 27
%bcond check 1
%global debug_package %{nil}

%global crate icu_normalizer

Name:           rust-icu_normalizer
Version:        1.5.0
Release:        %autorelease
Summary:        API for normalizing text into Unicode Normalization Forms

License:        Unicode-3.0
URL:            https://crates.io/crates/icu_normalizer
Source:         %{crates_source}
# Manually created patch for downstream crate metadata changes
# * Omit the benchmark-only dev-dependency on criterion
# * Do not package benchmarks or benchmark data
# * Update the atoi dev-dependency to 2.0,
#   https://github.com/unicode-org/icu4x/pull/6266
# * Remove the dev-dependency on arraystring, which does not appear actively
#   maintained, and which we do not want to package, at the cost of some of the
#   tests.
Patch:          icu_normalizer-fix-metadata.diff
# * Downstream-only: unconditionally skip compiling tests that would require the
#   arraystring crate. It does not appear actively maintained, and we do not
#   wish to package it solely for these tests.
Patch10:        icu_normalizer-1.5.0-no-arraystring-tests.patch

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
API for normalizing text into Unicode Normalization Forms.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+compiled_data-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+compiled_data-devel %{_description}

This package contains library source intended for building other packages which
use the "compiled_data" feature of the "%{crate}" crate.

%files       -n %{name}+compiled_data-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+datagen-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+datagen-devel %{_description}

This package contains library source intended for building other packages which
use the "datagen" feature of the "%{crate}" crate.

%files       -n %{name}+datagen-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+experimental-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+experimental-devel %{_description}

This package contains library source intended for building other packages which
use the "experimental" feature of the "%{crate}" crate.

%files       -n %{name}+experimental-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+serde-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+serde-devel %{_description}

This package contains library source intended for building other packages which
use the "serde" feature of the "%{crate}" crate.

%files       -n %{name}+serde-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+std-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+std-devel %{_description}

This package contains library source intended for building other packages which
use the "std" feature of the "%{crate}" crate.

%files       -n %{name}+std-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
# * All doc tests use icu::normalizer, which would require the circular
#   (path-based) dev-dependency on the icu crate.
%cargo_test -- --tests
%endif

%changelog
%autochangelog
