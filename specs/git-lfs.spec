%bcond check 1

%global go_vendor_license_check_disable %{defined rhel}
%global gomodulesmode GO111MODULE=on

# https://github.com/git-lfs/git-lfs
%global goipath         github.com/git-lfs/git-lfs/v3
Version:                3.7.1

%gometa -L -f


Name:           git-lfs
Release:        %autorelease
Summary:        Git extension for versioning large files

# Generated by go-vendor-tools
License:        Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND ISC AND MIT AND MPL-2.0
URL:            https://git-lfs.github.io/
Source0:        https://github.com/%{name}/%{name}/releases/download/v%{version}/%{name}-v%{version}.tar.gz
# Generated by go-vendor-tools
Source1:        %{name}-%{version}-vendor.tar.bz2
Source2:        https://github.com/git-lfs/git-lfs/releases/download/v%{version}/sha256sums.asc#/sha256sums-%{version}.asc
Source3:        https://api.github.com/repos/git-lfs/git-lfs/tarball/core-gpg-keys#/core-gpg-keys.tar.gz
Source4:        README.Fedora
Source5:        go-vendor-tools.toml

BuildRequires:  go-vendor-tools

BuildRequires:  gpgverify >= 2
# GPGverify 2 supports clearsigned files.

# Generate man pages
BuildRequires:  /usr/bin/asciidoctor

%if %{with check}
# Tests
BuildRequires:  perl-Digest-SHA
BuildRequires:  perl-Test-Harness
# Tests require full git suite, but not generally needed.
BuildRequires:  git >= 1.8.5
%endif

Requires:       git-core >= 1.8.5

%description
Git Large File Storage (LFS) replaces large files such as audio samples,
videos, datasets, and graphics with text pointers inside Git, while
storing the file contents on a remote server.


%prep
tar xf %{SOURCE3}
%{gpgverify} --keyrings git-lfs-git-lfs-*/keys.asc --data='%{SOURCE2}' \
             --output=trusted_checksums
# Remember that a clearsigned file can contain surrounding unsigned text. Only
# the verified text in trusted_checksums can be trusted.
cd %{_sourcedir}
sha256sum --check --ignore-missing --strict '%{builddir}/trusted_checksums'

%goprep -A
%setup -q -T -D -a1 %{forgesetupargs}
cp -p %{SOURCE4} .
%autopatch -p1

# Modify tests so that they expect binaries where we build them.
sed -i -e 's!\.\./bin/!/%{gobuilddir}/bin/!g' t/Makefile
sed -i -e 's!^BINPATH=.\+!BINPATH="%{gobuilddir}/bin"!g' t/testenv.sh


%generate_buildrequires
%go_vendor_license_buildrequires -c %{S:5}


%build
# Build manpages first (some embedding in the executable is done.)
# Note that the variables are set here simply to prevent the Makefile from
# shelling out to git, but the actual value is unused.
make man GIT_LFS_SHA=unused VERSION=unused PREFIX=unused
pushd docs
%gobuild -o %{gobuilddir}/bin/mangen man/mangen.go
%{gobuilddir}/bin/mangen
popd

%if 0%{?fedora}
LDFLAGS="-X 'github.com/git-lfs/git-lfs/config.Vendor=Fedora %{?fedora}' " \
%endif
%gobuild -o %{gobuilddir}/bin/git-lfs %{goipath}

# Generate completion files.
for shell in bash fish zsh; do
    %{gobuilddir}/bin/git-lfs completion ${shell} > %{name}.${shell}
done

# Build test executables.
for cmd in t/cmd/*.go; do
    %gobuild -o "%{gobuilddir}/bin/$(basename $cmd .go)" "$cmd"
done
%gobuild -o "%{gobuilddir}/bin/git-lfs-test-server-api" t/git-lfs-test-server-api/*.go

# Remove man pages from docs so they don't get installed twice.
rm -r docs/man


%install
%go_vendor_license_install -c %{S:5}
install -Dpm0755 %{gobuilddir}/bin/git-lfs %{buildroot}%{_bindir}/%{name}
for section in 1 5 7; do
    install -d -p %{buildroot}%{_mandir}/man${section}/
    install -Dpm0644 man/man${section}/*.${section} %{buildroot}%{_mandir}/man${section}/
done
install -Dpm 0644 %{name}.bash %{buildroot}%{bash_completions_dir}/%{name}
install -Dpm 0644 %{name}.fish %{buildroot}%{fish_completions_dir}/%{name}.fish
install -Dpm 0644 %{name}.zsh  %{buildroot}%{zsh_completions_dir}/_%{name}


%post
if [ "x$(git config --type=bool --get 'fedora.git-lfs.no-modify-config')" != "xtrue" ]; then
%{_bindir}/%{name} install --system --skip-repo
fi

%preun
if [ $1 -eq 0 ] && \
   [ "x$(git config --type=bool --get 'fedora.git-lfs.no-modify-config')" != "xtrue" ]; then
    %{_bindir}/%{name} uninstall --system --skip-repo
fi
exit 0


%check
%go_vendor_license_check -c %{S:5}
%if %{with check}
%gotest ./...
PATH=%{buildroot}%{_bindir}:%{gobuilddir}/bin:$PATH \
    make -C t PROVE_EXTRA_ARGS="-j$(getconf _NPROCESSORS_ONLN)"
%endif


%files -f %{go_vendor_license_filelist}
%doc README.md README.Fedora CHANGELOG.md docs
%license vendor/modules.txt
%{_bindir}/%{name}
%{_mandir}/man1/%{name}*.1*
%{_mandir}/man5/%{name}*.5*
%{_mandir}/man7/%{name}*.7*
%{bash_completions_dir}/%{name}
%{fish_completions_dir}/%{name}.fish
%{zsh_completions_dir}/_%{name}


%changelog
%autochangelog
