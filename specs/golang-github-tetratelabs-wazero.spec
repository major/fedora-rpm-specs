# Generated by go2rpm 1.16.0
%bcond check 1
%bcond bootstrap 0

%if %{with bootstrap}
%global debug_package %{nil}
%endif

%if %{with bootstrap}
%global __requires_exclude %{?__requires_exclude:%{__requires_exclude}|}^golang\\(.*\\)$
%endif

# https://github.com/tetratelabs/wazero
%global goipath         github.com/tetratelabs/wazero
Version:                1.9.0

%gometa -L -f

%global common_description %{expand:
WebAssembly is a way to safely run code compiled in other languages. Runtimes
execute WebAssembly Modules (Wasm), which are most often binaries with a .wasm
extension.

wazero is a WebAssembly Core Specification 1.0 and 2.0 compliant runtime
written in Go. It has zero dependencies, and doesn't rely on CGO. This means
you can run applications in other languages and still keep cross compilation.}

%global golicenses      LICENSE NOTICE
%global godocs          examples CONTRIBUTING.md RATIONALE.md README.md

Name:           golang-github-tetratelabs-wazero
Release:        %autorelease
Summary:        Wazero: the zero dependency WebAssembly runtime for Go developers

License:        Apache-2.0
URL:            %{gourl}
Source:         %{gosource}

# https://github.com/tetratelabs/wazero/issues/2409
Patch:          0001-Skip-Nlink-test-in-TestStat.patch
# https://github.com/tetratelabs/wazero/pull/2411
Patch:          0002-Skip-custom-context-host-test-if-compiler-unsupporte.patch
# https://github.com/tetratelabs/wazero/pull/2410
Patch:          0003-Ensure-interpreter.Engine-is-empty-after-closing.patch
# https://github.com/tetratelabs/wazero/pull/2412
Patch:          0004-Add-ppc64le-s390x-Linux-to-supported-stat-implementa.patch
# https://github.com/tetratelabs/wazero/pull/2415
Patch:          0005-TST-Increase-buffer-size-of-TestWriteFdNonblock.patch

%description %{common_description}

%gopkg

%prep
%goprep -A
%autopatch -p1

%if %{without bootstrap}
%generate_buildrequires
%go_generate_buildrequires
%endif

%if %{without bootstrap}
%build
export GO_LDFLAGS='-X %{goipath}/internal/version.version=%{version}'
for cmd in cmd/* ; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done
%endif

%install
%gopkginstall
%if %{without bootstrap}
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/
%endif

%if %{without bootstrap}
%if %{with check}
%check
%gocheck -t internal/integration_test/spectest
%endif
%endif

%if %{without bootstrap}
%files
%license LICENSE NOTICE
%doc CONTRIBUTING.md RATIONALE.md cmd/wazero/README.md
%{_bindir}/wazero
%endif

%gopkgfiles

%changelog
%autochangelog
