# Generated by rust2rpm 27
%bcond check 1

# prevent library files from being installed
%global cargo_install_lib 0

%global crate sccache

Name:           rust-sccache
Version:        0.10.0
Release:        %autorelease
Summary:        Ccache-like tool
ExcludeArch:    %{ix86}

# The entire source is Apache-2.0, except:
# - src/lru_disk_cache/lru_cache.rs is Apache-2.0 OR MIT
# - tests/cmake-hip/vectoradd_hip.cpp is MIT, but does not contribute to the
#   licenses of the binary RPMs
License:        Apache-2.0 AND (Apache-2.0 OR MIT)
URL:            https://crates.io/crates/sccache
Source:         %{crates_source}
# Automatically generated patch to strip dependencies and normalize metadata
Patch:          sccache-fix-metadata-auto.diff
# Manually created patch for downstream crate metadata changes
# * Edited default features
# * Removed dist-server feature and rouille dependency
# * Removed ar dependency
# * Bumped gzp version number
# * Bumped object version number
# * Bumped which version number
Patch:          sccache-fix-metadata.diff
# * Support object crates >= 0.33
# * https://github.com/mozilla/sccache/pull/2374
Patch3:         sccache-support-newer-object-crates.patch

BuildRequires:  cargo-rpm-macros >= 26

%global _description %{expand:
Sccache is a ccache-like tool. It is used as a compiler wrapper and
avoids compilation when possible. Sccache has the capability to utilize
caching in remote storage environments, including various cloud storage
options, or alternatively, in local storage.}

%description %{_description}

%package     -n %{crate}
Summary:        %{summary}
# Output of %%{cargo_license_summary}:
#
# (Apache-2.0 OR MIT) AND BSD-3-Clause
# (MIT OR Apache-2.0) AND Unicode-DFS-2016
# 0BSD OR MIT OR Apache-2.0
# Apache-2.0
# Apache-2.0 AND ISC AND (MIT OR Apache-2.0)
# Apache-2.0 OR Apache-2.0 WITH LLVM-exception
# Apache-2.0 OR BSL-1.0
# Apache-2.0 OR ISC OR MIT
# Apache-2.0 OR MIT
# Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT
# BSD-2-Clause
# BSD-2-Clause OR Apache-2.0 OR MIT
# BSD-3-Clause
# CDLA-Permissive-2.0
# ISC
# MIT
# MIT OR Apache-2.0
# MIT OR Zlib OR Apache-2.0
# MIT-0 OR Apache-2.0
# MPL-2.0
# Unicode-3.0
# Unlicense OR MIT
# Zlib
License:        %{shrink:
    Apache-2.0 AND
    BSD-2-Clause AND
    BSD-3-Clause AND
    CDLA-Permissive-2.0 AND
    ISC AND
    MIT AND
    MPL-2.0 AND
    Unicode-3.0 AND
    Unicode-DFS-2016 AND
    Zlib AND
    (0BSD OR MIT OR Apache-2.0) AND
    (Apache-2.0 OR Apache-2.0 WITH LLVM-exception) AND
    (Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT) AND
    (Apache-2.0 OR BSL-1.0) AND
    (Apache-2.0 OR ISC OR MIT) AND
    (Apache-2.0 OR MIT) AND
    (BSD-2-Clause OR Apache-2.0 OR MIT) AND
    (MIT OR Zlib OR Apache-2.0) AND
    (MIT-0 OR Apache-2.0) AND
    (Unlicense OR MIT)
}
# LICENSE.dependencies contains a full license breakdown

%description -n %{crate} %{_description}

%files       -n %{crate}
%license LICENSE
%license LICENSE.dependencies
%doc CODE_OF_CONDUCT.md
%doc README.md
%{_bindir}/sccache

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep
rm -f tests/oauth.rs

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build
%{cargo_license_summary}
%{cargo_license} > LICENSE.dependencies

%install
%cargo_install

%if %{with check}
%check
# * Skip tests which use test-crate which isn't part of the source crate.
# * Skip tests using ar crate
# * Skip tests trying to use rustup
%{cargo_test -- -- %{shrink:
    --skip test_rust_cargo_build
    --skip test_rust_cargo_build_readonly
    --skip test_rust_cargo_check
    --skip test_rust_cargo_check_readonly
    --skip test_rust_cargo_cmd_readonly_preemtive_block
    --skip test_rust_cargo_run_with_env_dep_parsing
    --skip test_adv_cache_hit_rate
    --skip test_cache_hit_rate
    --skip test_generate_hash_key
    --skip test_rlib_dep_reader_call
}}
%endif

%changelog
%autochangelog
