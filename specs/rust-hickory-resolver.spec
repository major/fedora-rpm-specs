# Generated by rust2rpm 27
%bcond check 1
%global debug_package %{nil}

%global crate hickory-resolver

Name:           rust-hickory-resolver
Version:        0.25.2
Release:        %autorelease
Summary:        Hickory DNS is a safe and secure DNS library

License:        MIT OR Apache-2.0
URL:            https://crates.io/crates/hickory-resolver
Source:         %{crates_source}
# Automatically generated patch to strip dependencies and normalize metadata
Patch:          hickory-resolver-fix-metadata-auto.diff
# * Downstream-only: omit tests that import from test_support, which is not
#   included in the crate.
Patch10:        0001-Omit-tests-that-require-test_support-not-in-the-crat.patch
# * Downstream-only: omit doctests that require network access
Patch11:        0002-Omit-doctests-that-require-network-access.patch

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
Hickory DNS is a safe and secure DNS library. This Resolver library uses
the Client library to perform all DNS queries. The Resolver is intended
to be a high-level library for any DNS record resolution. See Resolver
for supported resolution types. The Client can be used for other
queries.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE-APACHE
%license %{crate_instdir}/LICENSE-MIT
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+backtrace-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+backtrace-devel %{_description}

This package contains library source intended for building other packages which
use the "backtrace" feature of the "%{crate}" crate.

%files       -n %{name}+backtrace-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+rustls-platform-verifier-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+rustls-platform-verifier-devel %{_description}

This package contains library source intended for building other packages which
use the "rustls-platform-verifier" feature of the "%{crate}" crate.

%files       -n %{name}+rustls-platform-verifier-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+serde-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+serde-devel %{_description}

This package contains library source intended for building other packages which
use the "serde" feature of the "%{crate}" crate.

%files       -n %{name}+serde-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+system-config-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+system-config-devel %{_description}

This package contains library source intended for building other packages which
use the "system-config" feature of the "%{crate}" crate.

%files       -n %{name}+system-config-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+tokio-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+tokio-devel %{_description}

This package contains library source intended for building other packages which
use the "tokio" feature of the "%{crate}" crate.

%files       -n %{name}+tokio-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+webpki-roots-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+webpki-roots-devel %{_description}

This package contains library source intended for building other packages which
use the "webpki-roots" feature of the "%{crate}" crate.

%files       -n %{name}+webpki-roots-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
# * We must skip tests that try to read hosts.conf or resolv.conf, which are not
#   present in the offline mock environment.
%{cargo_test -- -- --exact %{shrink:
    --skip hosts::tests::test_read_hosts_conf
    --skip system_conf::unix::tests::test_read_resolv_conf
}}
%endif

%changelog
%autochangelog
