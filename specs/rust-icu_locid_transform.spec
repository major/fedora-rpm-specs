# Generated by rust2rpm 27
%bcond check 1
%global debug_package %{nil}

%global crate icu_locid_transform

Name:           rust-icu_locid_transform
Version:        1.5.0
Release:        %autorelease
Summary:        API for Unicode Language and Locale Identifiers canonicalization

License:        Unicode-3.0
URL:            https://crates.io/crates/icu_locid_transform
Source:         %{crates_source}
# Manually created patch for downstream crate metadata changes
# * Drop benchmark-only criterion dependency
# * Restore path-based dev-dependency on writeable: 0.5.x for ICU4X 1.5. In
#   ICU4X 2.0, this will be writeable 0.6.x. This could be fixed upstream by
#   adding the version bound in addition to the path, similar to “In zerovec,
#   add the yoke version bound to the dev-dependency”
#   https://github.com/unicode-org/icu4x/pull/5537, but what’s different in this
#   case is that there is no regular (non-dev, non-path) dependency on
#   writeable, so adding the version bound would give upstream something else to
#   maintain. We therefore keep this downstream-only for now.
Patch:          icu_locid_transform-fix-metadata.diff

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
API for Unicode Language and Locale Identifiers canonicalization.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+compiled_data-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+compiled_data-devel %{_description}

This package contains library source intended for building other packages which
use the "compiled_data" feature of the "%{crate}" crate.

%files       -n %{name}+compiled_data-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+datagen-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+datagen-devel %{_description}

This package contains library source intended for building other packages which
use the "datagen" feature of the "%{crate}" crate.

%files       -n %{name}+datagen-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+serde-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+serde-devel %{_description}

This package contains library source intended for building other packages which
use the "serde" feature of the "%{crate}" crate.

%files       -n %{name}+serde-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+std-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+std-devel %{_description}

This package contains library source intended for building other packages which
use the "std" feature of the "%{crate}" crate.

%files       -n %{name}+std-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
# * All doc tests use icu::locid, which would require the circular (path-based)
#   dev-dependency on the icu crate.
# * The test fallback::algorithms::tests::test_aux_key_fallback fails when the
#   dev-dependency on the icu crate is not present. This does not appear in the
#   normalized Cargo.toml because it is path-based, and we do not restore it
#   because the dependency would be circular.
%cargo_test -- --tests -- --exact --skip fallback::algorithms::tests::test_aux_key_fallback
%endif

%changelog
%autochangelog
