# Generated by rust2rpm 27
# * test fixtures are not included in published crates
%bcond check 0
%global debug_package %{nil}

%global crate ring

Name:           rust-ring
Version:        0.17.8
Release:        %autorelease
Summary:        Safe, fast, small crypto using Rust

License:        ISC AND MIT AND OpenSSL
URL:            https://crates.io/crates/ring
Source:         %{crates_source}
# * Missing assembly-code generator scripts.
# * Fixed in upstream commit 2893ff9ce2c00671d9e240527dcbd4b4abf0fd14.
# * Commit hash in URLs corresponds to 0.17.8 (not tagged).
Source10:       https://github.com/briansmith/ring/raw/fa98b490bcbc99a01ff150896ec74c1813242d7f/crypto/fipsmodule/aes/asm/vpaes-armv7.pl
Source11:       https://github.com/briansmith/ring/raw/fa98b490bcbc99a01ff150896ec74c1813242d7f/crypto/fipsmodule/aes/asm/vpaes-armv8.pl
Source12:       https://github.com/briansmith/ring/raw/fa98b490bcbc99a01ff150896ec74c1813242d7f/crypto/fipsmodule/modes/asm/ghash-neon-armv8.pl
# Automatically generated patch to strip dependencies and normalize metadata
Patch:          ring-fix-metadata-auto.diff
# Manually created patch for downstream crate metadata changes
# * set package.license in metadata to match package license
# * drop unstable / WASM-only features
# * Include a few extra scripts in the Cargo.toml:
#   https://github.com/briansmith/ring/commit/2893ff9ce2c00671d9e240527dcbd4b4abf0fd14
Patch:          ring-fix-metadata.diff
# * Downstream-ony: never use pre-generated object files. We must not package
#   pre-generated object files from upstream, and we would prefer not to package
#   .o files compiled at rust-ring build time, either.
Patch10:        0001-Downstream-only-never-use-pre-generated-object-files.patch

BuildRequires:  cargo-rpm-macros >= 24
BuildRequires:  gcc
BuildRequires:  /usr/bin/perl

%global _description %{expand:
Safe, fast, small crypto using Rust.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch
Requires:       gcc
Requires:       /usr/bin/perl

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE
%license %{crate_instdir}/third_party/fiat/LICENSE
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+alloc-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+alloc-devel %{_description}

This package contains library source intended for building other packages which
use the "alloc" feature of the "%{crate}" crate.

%files       -n %{name}+alloc-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+dev_urandom_fallback-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+dev_urandom_fallback-devel %{_description}

This package contains library source intended for building other packages which
use the "dev_urandom_fallback" feature of the "%{crate}" crate.

%files       -n %{name}+dev_urandom_fallback-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+less-safe-getrandom-custom-or-rdrand-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+less-safe-getrandom-custom-or-rdrand-devel %{_description}

This package contains library source intended for building other packages which
use the "less-safe-getrandom-custom-or-rdrand" feature of the "%{crate}" crate.

%files       -n %{name}+less-safe-getrandom-custom-or-rdrand-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+slow_tests-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+slow_tests-devel %{_description}

This package contains library source intended for building other packages which
use the "slow_tests" feature of the "%{crate}" crate.

%files       -n %{name}+slow_tests-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+std-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+std-devel %{_description}

This package contains library source intended for building other packages which
use the "std" feature of the "%{crate}" crate.

%files       -n %{name}+std-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+test_logging-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+test_logging-devel %{_description}

This package contains library source intended for building other packages which
use the "test_logging" feature of the "%{crate}" crate.

%files       -n %{name}+test_logging-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep
# We must not package pre-generated object files from upstream, and we would
# prefer not to package .o files compiled at rust-ring build time, either.
# See Patch10. We just remove the entire pregenerated/ directory.
#
# https://docs.fedoraproject.org/en-US/packaging-guidelines/what-can-be-packaged/#prebuilt-binaries-or-libraries
# https://docs.fedoraproject.org/en-US/packaging-guidelines/#_packaging_static_libraries
rm -rv pregenerated
# Verify that there are no remaining pre-generated object files.
find . -type f -name '*.o' -print -delete
# Copy in missing assembly-code generator scripts.
cp -p '%{SOURCE10}' '%{SOURCE11}' crypto/fipsmodule/aes/asm/
cp -p '%{SOURCE12}' crypto/fipsmodule/modes/asm/

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
%cargo_test
%endif

%changelog
%autochangelog
